services:
  db:
    image: mysql:5.7
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./db_data:/var/lib/mysql
      - ./scripts/init-multi-db.sql:/docker-entrypoint-initdb.d/init-multi-db.sql:ro
    ports:
      - "3306"
    networks:
      - wordpress_nextjs_network_app

  wordpress:
    build:
      context: ./wordpress-api
      dockerfile: Dockerfile
    container_name: wordpress_app
    ports:
      - "8000:80"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      JWT_AUTH_SECRET_KEY: "test_secret_key"
    depends_on:
      - db
    networks:
      - wordpress_nextjs_network_app

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.next
    container_name: nextjs_app
    ports:
      - "3000:3000"
    depends_on:
      - wordpress
    networks:
      - wordpress_nextjs_network_app

  laravel:
    build:
      context: ./laravel-api
      dockerfile: Dockerfile
    container_name: laravel_app
    ports:
      - "8001:8000"  # Mapeando a porta 8000 do container para a 8001 do host
    volumes:
      - ./laravel-api:/var/www/html
    environment:
      DB_HOST: db
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: laravel
    depends_on:
      - db
    networks:
      - wordpress_nextjs_network_app


networks:
  wordpress_nextjs_network_app:
    driver: bridge
